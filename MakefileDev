deps start-deps:
		@docker-compose --project-name vmodcurl up -d
		@echo "Dependencies started successfully."

deps-build:
		@docker-compose --project-name vmodcurl up --build -d

stop-deps:
		@docker-compose --project-name vmodcurl down

shell:
		@docker-compose --project-name vmodcurl run varnish /bin/bash

put:
		@docker container create --name dummy -v vmodcurl_app:/root alpine
		@docker cp `pwd`/. dummy:/root
		@docker rm dummy

first-compile:
		@docker-compose --project-name vmodcurl run varnish /bin/bash -c "cd /app && ./autogen.sh && ./configure && make"

compile:
		@docker-compose --project-name vmodcurl run varnish /bin/bash -c "cd /app && make"

test: put compile unit

unit:
		@docker-compose --project-name vmodcurl run varnish /bin/bash -c "cd /app && varnishtest -Dvmod_topbuild=/app src/tests/*.vtc"

run: put compile
		@docker-compose --project-name vmodcurl run -p "8080:80" varnish /bin/bash -c "rsyslogd && varnishd -F -f /app/default.vcl -s malloc,100m -a 0.0.0.0:80 -p http_req_hdr_len=16384 -p http_resp_hdr_len=16384"

VMOD_TESTS = ./src/tests/*.vtc
.PHONY: $(VMOD_TESTS)

./src/tests/*.vtc:
		@${MAKE} -f ${MAKEFILE_LIST} put compile
		@docker-compose --project-name vmodcurl run varnish /bin/bash -c "cd /app && varnishtest -Dvmod_topbuild=/app $@"
